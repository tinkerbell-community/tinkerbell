version: 2

project_name: tinkerbell

env:
  - REGISTRY={{ if index .Env "REGISTRY"  }}{{ .Env.REGISTRY }}{{ else }}ghcr.io{{ end }}
  - IMAGE_NAME={{ if index .Env "IMAGE_NAME"  }}{{ .Env.IMAGE_NAME }}{{ else }}{{.GitURL | trimprefix "https://" | trimprefix "git@" | trimprefix "github.com" | trimprefix ":" | trimprefix "/" | trimsuffix ".git"}}{{ end }}
  - IS_RELEASE={{ if index .Env "IS_RELEASE" }}{{ .Env.IS_RELEASE }}{{ else }}true{{ end }}

before:
  hooks:
    - go mod tidy
    - sh -c 'apko build apko.yaml goreleaser.ko.local/tinkerbell-base:latest tinkerbell-base.tar --arch amd64,arm64'
    - sh -c 'docker load < tinkerbell-base.tar'
    - rm tinkerbell-base.tar sbom-aarch64.spdx.json sbom-index.spdx.json sbom-x86_64.spdx.json

builds:
  - id: tinkerbell
    env: ["CGO_ENABLED=0"]
    main: ./cmd/tinkerbell
    binary: "tinkerbell"
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    skip: false

  - id: tink-agent
    env: ["CGO_ENABLED=0"]
    main: ./cmd/agent
    binary: "tink-agent"
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    skip: false

upx:
  - enabled: true
    ids:
      - tinkerbell
      - tink-agent
    compress: best

checksum:
  name_template: "checksums.txt"

archives:
  - formats:
      - binary

release:
  disable: true

snapshot:
  version_template: "{{ incpatch .Version }}-next"

kos:
  - id: tinkerbell-ko
    build: tinkerbell
    repositories:
      - "{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME }}"
    tags:
      - '{{ if eq .Env.IS_RELEASE "true" }}v{{ .Version }}{{ end }}'
      - "{{ if not .IsSnapshot }}latest{{ end }}"
      - '{{ if eq .Branch "main" }}sha-{{ .ShortCommit }}{{ end }}'
    labels:
      "org.opencontainers.image.created": "{{.Date}}"
      "org.opencontainers.image.name": "{{.ProjectName}}"
      "org.opencontainers.image.revision": "{{.FullCommit}}"
      "org.opencontainers.image.version": "v{{.Version}}"
      "org.opencontainers.image.source": "{{.GitURL}}"
    bare: true
    preserve_import_paths: false
    platforms:
      - linux/amd64
      - linux/arm64
    base_image: goreleaser.ko.local/tinkerbell-base:latest
    creation_time: "{{.CommitTimestamp}}"
    ko_data_creation_time: "{{.CommitTimestamp}}"
    local_domain: "ghcr.io/tinkerbell-community/tinkerbell"
    disable: "{{ .IsSnapshot }}"

  - id: tink-agent-ko
    build: tink-agent
    repositories:
      - "{{ .Env.REGISTRY }}/{{ .Env.IMAGE_NAME | trimsuffix .ProjectName }}tink-agent"
    tags:
      - '{{ if eq .Env.IS_RELEASE "true" }}v{{ .Version }}{{ end }}'
      - "{{ if not .IsSnapshot }}latest{{ end }}"
      - '{{ if eq .Branch "main" }}sha-{{ .ShortCommit }}{{ end }}'
    labels:
      "org.opencontainers.image.created": "{{.Date}}"
      "org.opencontainers.image.name": "{{.ProjectName}}"
      "org.opencontainers.image.revision": "{{.FullCommit}}"
      "org.opencontainers.image.version": "v{{.Version}}"
      "org.opencontainers.image.source": "{{.GitURL}}"
    bare: true
    preserve_import_paths: false
    platforms:
      - linux/amd64
      - linux/arm64
    base_image: docker.io/chainguard/static
    creation_time: "{{.CommitTimestamp}}"
    ko_data_creation_time: "{{.CommitTimestamp}}"
    local_domain: "ghcr.io/tinkerbell-community/tink-agent"
    disable: "{{ .IsSnapshot }}"

docker_signs:
  - artifacts: all
